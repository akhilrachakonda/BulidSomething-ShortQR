apiVersion: apps/v1
kind: Deployment
metadata:
  name: url-service
  namespace: shorty
  labels:
    app: url-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: url-service
  template:
    metadata:
      labels:
        app: url-service
    spec:
      securityContext:
        fsGroup: 1000
      containers:
      - name: url-service
        image: akhilrachakonda2004347/shortyqr-url-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        envFrom:
        - configMapRef:
            name: shortyqr-config
        env:
        - name: ALLOWED_ORIGINS
          valueFrom:
            configMapKeyRef:
              name: shortyqr-config
              key: ALLOWED_ORIGINS
        - name: QR_SERVICE_URL
          value: "http://qr-service:8080"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_DB
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "300m"
            memory: "256Mi"
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          allowPrivilegeEscalation: false
